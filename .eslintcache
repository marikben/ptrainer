[{"C:\\Users\\Mariam\\ptrainer\\src\\index.js":"1","C:\\Users\\Mariam\\ptrainer\\src\\App.js":"2","C:\\Users\\Mariam\\ptrainer\\src\\reportWebVitals.js":"3","C:\\Users\\Mariam\\ptrainer\\src\\components\\CustList.js":"4","C:\\Users\\Mariam\\ptrainer\\src\\components\\TrainList.js":"5","C:\\Users\\Mariam\\ptrainer\\src\\components\\Home.js":"6","C:\\Users\\Mariam\\ptrainer\\src\\components\\AddCust.js":"7","C:\\Users\\Mariam\\ptrainer\\src\\components\\AddTrain.js":"8","C:\\Users\\Mariam\\ptrainer\\src\\components\\EditCust.js":"9","C:\\Users\\Mariam\\ptrainer\\src\\components\\EditTrain.js":"10","C:\\Users\\Mariam\\ptrainer\\src\\components\\CustTrainings.js":"11","C:\\Users\\Mariam\\ptrainer\\src\\components\\Calendar.js":"12","C:\\Users\\Mariam\\ptrainer\\src\\components\\Charts.js":"13"},{"size":548,"mtime":1610132827116,"results":"14","hashOfConfig":"15"},{"size":2783,"mtime":1610627071139,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1606247965365,"results":"17","hashOfConfig":"15"},{"size":4927,"mtime":1610572658645,"results":"18","hashOfConfig":"15"},{"size":5458,"mtime":1610628026324,"results":"19","hashOfConfig":"15"},{"size":197,"mtime":1610572658651,"results":"20","hashOfConfig":"15"},{"size":3254,"mtime":1610572658640,"results":"21","hashOfConfig":"15"},{"size":2330,"mtime":1610572658642,"results":"22","hashOfConfig":"15"},{"size":3612,"mtime":1610572658649,"results":"23","hashOfConfig":"15"},{"size":2509,"mtime":1610572658650,"results":"24","hashOfConfig":"15"},{"size":2958,"mtime":1610650095653,"results":"25","hashOfConfig":"15"},{"size":1283,"mtime":1610572658644,"results":"26","hashOfConfig":"15"},{"size":1325,"mtime":1610664941885,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1hx77x6",{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Mariam\\ptrainer\\src\\index.js",[],["59","60"],"C:\\Users\\Mariam\\ptrainer\\src\\App.js",["61","62","63","64"],"import React from 'react';\nimport { BrowserRouter, Switch, Route, Link} from 'react-router-dom';\nimport './App.css';\nimport CustList from './components/CustList';\nimport TrainList from './components/TrainList';\nimport Home from \"./components/Home\";\nimport Calendar from \"./components/Calendar\";\nimport Charts from \"./components/Charts\";\nimport Button from '@material-ui/core/Button';\nimport CustTrainings from './components/CustTrainings';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Fade from '@material-ui/core/Fade';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\nfunction App() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  return (\n    <div  className={classes.root}>\n      <h2>Personal trainer App</h2>\n      <BrowserRouter>\n      <div>\n        <AppBar position=\"static\" style={{ background: '#2E3B55' }}>\n          \n          <Button aria-controls=\"fade-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n        Navigation\n      </Button>\n      <Menu\n        id=\"fade-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Fade}\n      >\n        <MenuItem onClick={handleClose}><Link to=\"/\"><Button>Home</Button></Link >{' '}</MenuItem>\n        <MenuItem onClick={handleClose}><Link to=\"/customers\"><Button>Customers</Button></Link>{' '}</MenuItem>\n        <MenuItem onClick={handleClose}><Link to=\"/trainings\"><Button>Workout schedule</Button></Link>{' '}</MenuItem>\n        <MenuItem onClick={handleClose}><Link to=\"/calendar\"><Button>Calendar</Button></Link>{' '}</MenuItem>\n        <MenuItem onClick={handleClose}><Link to=\"/statistics\"><Button>Statistics</Button></Link>{' '}</MenuItem>\n      </Menu>\n     \n      </AppBar>\n      <Switch><Route exact path=\"/\" component={Home}/>\n      <Route path = \"/customers\" component={CustList}/>\n      <Route path = \"/trainings\" component={TrainList}/>\n      <Route path = \"/calendar\" component={Calendar}/>\n      <Route path = \"/statistics\" component={Charts}/>\n      <Route render={() => <h1> Page not found</h1>}/></Switch>\n     \n    \n      </div></BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Mariam\\ptrainer\\src\\reportWebVitals.js",[],"C:\\Users\\Mariam\\ptrainer\\src\\components\\CustList.js",["65"],"import React, {useState, useEffect} from 'react';\r\nimport ReactTable from 'react-table';\r\nimport 'react-table/react-table.css'; \r\nimport AddCust from './AddCust';\r\nimport EditCust from './EditCust';\r\nimport Button from '@material-ui/core/Button';\r\nimport CustTrainings from './CustTrainings'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n  \r\n\r\nexport default function CustList(props){\r\n    const [customers, setCustomers] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    useEffect(() => fetchData(), []);\r\n\r\n    const fetchData = () => {\r\n        fetch('https://customerrest.herokuapp.com/api/customers')\r\n        .then(response => response.json())\r\n        .then(data => setCustomers(data.content))\r\n    \r\n    }\r\n    \r\n    const handleClick = () => {\r\n        setOpen(true);\r\n      };\r\n      \r\n      const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n    \r\n        setOpen(false);\r\n      };\r\n\r\n    const deleteCust = (link) => {\r\n        console.log(link)\r\n        if (window.confirm('Are you sure?')){\r\n        fetch(link, {method: 'DELETE'})\r\n        .then(handleClick())\r\n        .then(response => fetchData())\r\n        .catch(err => console.error(err))   \r\n    }\r\n}\r\n\r\n    const columns = [\r\n        {\r\n            Header: 'Firstname',\r\n            accessor: 'firstname',\r\n            sortable: true,\r\n            filter: true,\r\n            width: 100\r\n        },\r\n        {\r\n            Header: 'Lastname',\r\n            accessor: 'lastname',\r\n            sortable: true,\r\n            filter: true,\r\n            width: 100\r\n        },\r\n        {\r\n            Header: 'Street address',\r\n            accessor: 'streetaddress',\r\n            sortable: true,\r\n            filter: true,\r\n            width: 200\r\n        },\r\n        {\r\n            Header: 'Postcode',\r\n            accessor: 'postcode',\r\n            sortable: true,\r\n            filter: true,\r\n            width: 90\r\n        },\r\n        {\r\n            Header: 'City',\r\n            accessor: 'city',\r\n            sortable: true,\r\n            filter: true,\r\n            width: 150\r\n        },\r\n        {\r\n            Header: 'Email',\r\n            accessor: 'email',\r\n            sortable: true,\r\n            filter: true,\r\n            width: 150\r\n        },\r\n        {\r\n            Header: 'Phone',\r\n            accessor: 'phone',\r\n            sortable: true,\r\n            filter: true,\r\n            width: 150\r\n        },\r\n        {\r\n            accessor: 'links.2.href',\r\n            Cell: row => <CustTrainings ctraining={row.value} cust={row.original.links[0].href} />\r\n\r\n        },\r\n        {\r\n            sortable: false,\r\n            filterable: false,\r\n            width: 100,\r\n            Cell: row => <EditCust updateCust={updateCust} customer={row.original} />\r\n        },\r\n        {\r\n            sortable: false,\r\n            filterable: false,\r\n            width: 100,\r\n            accessor: 'links.0.href',\r\n            Cell: row => <Button size=\"small\" color=\"secondary\" onClick={ () => deleteCust(row.value)}>Delete</Button>\r\n        }\r\n    ]\r\n\r\n    const saveCust = (customer) => {\r\n        fetch('https://customerrest.herokuapp.com/api/customers', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(customer)\r\n        })\r\n        .then(res => fetchData())\r\n        .catch(err => console.error(err))\r\n    }\r\n\r\n    const updateCust = (customer, link) => { \r\n        fetch(link, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(customer)\r\n    })\r\n    .then(res => fetchData())\r\n    .catch(err => console.error(err))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <AddCust saveCust={saveCust} />\r\n        <ReactTable filterable defaultFilterMethod={filterCaseInsensitive} columns={columns} data={customers}></ ReactTable>\r\n        <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"success\">\r\n            The customer was deleted succesfully!\r\n            </Alert>\r\n            </Snackbar>\r\n    </div>\r\n    );\r\n    }\r\n\r\n    function filterCaseInsensitive(filter, row) {\r\n        const id = filter.pivotId || filter.id;\r\n        console.log(row.date)\r\n        return (row[id] !== undefined ?         \r\n        String(row[id].toLowerCase()).startsWith(filter.value.toLowerCase())\r\n        :           true    );\r\n    }\r\n    ","C:\\Users\\Mariam\\ptrainer\\src\\components\\TrainList.js",["66","67","68"],"import React, {useState, useEffect} from 'react';\r\nimport ReactTable from 'react-table';\r\nimport useGlobalFilter from 'react-table';\r\nimport 'react-table/react-table.css'; \r\nimport moment from 'moment';\r\nimport AddTrain from './AddTrain';\r\nimport EditTrain from './EditTrain';\r\nimport Button from '@material-ui/core/Button';\r\nimport Charts from './Charts';\r\nimport CustTrainings from './CustTrainings';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n\r\nexport default function TrainList(){\r\n    \r\n    const [trainings, setTrainings] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const date = trainings.date;\r\n    useEffect(() => fetchData(), []);\r\n \r\n    const fetchData = () => {\r\n        fetch('https://customerrest.herokuapp.com/api/trainings')\r\n        .then(response => response.json())\r\n        .then(data => setTrainings(data.content))\r\n       \r\n    }\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n      };\r\n\r\n      const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n    \r\n        setOpen(false);\r\n      };\r\n    const deleteTrain = (link) => {\r\n        console.log(link)\r\n        if (window.confirm('Are you sure?')){\r\n        fetch(link, {method: 'DELETE'})\r\n        .then(handleClick())\r\n        .then(response => fetchData())\r\n        .catch(err => console.error(err))   \r\n    }\r\n}\r\n    const dateFilter = (date) => {\r\n        const day = moment(date).format('DD')\r\n        const month = moment(date).format('MM')\r\n        const year = moment(date).format('YYYY')\r\n        console.log(day)\r\n        console.log(month)\r\n        console.log(year)\r\n    }\r\n\r\n    const columns = [\r\n     \r\n        { Header: \"Date & time\", \r\n        accessor: 'date',\r\n        Cell : accessor => {\r\n            const customdate = moment(accessor.original.date).format('LLL')\r\n            dateFilter(customdate)\r\n            return customdate\r\n        },\r\n        width: 300\r\n        },\r\n       \r\n        {\r\n            Header: 'Duration',\r\n            accessor: 'duration',\r\n            filterMethod:  (filter, row) => filterNumber(filter, row)\r\n        },\r\n        {\r\n            Header: 'Activity',\r\n            accessor: 'activity',\r\n            filterable: true,\r\n            filterMethod:  (filter, row) => filterCaseInsensitive(filter, row)\r\n        },\r\n     \r\n        {\r\n            sortable: false,\r\n            filterable: false,\r\n            width: 100,\r\n            Cell: row => <EditTrain updateTrain={updateTrain} training={row.original} />\r\n        },\r\n        {\r\n            sortable: false,\r\n            filterable: false,\r\n            width: 100,\r\n            accessor: 'links.0.href',\r\n            Cell: row => <Button size=\"small\" color=\"secondary\" onClick={ () => deleteTrain(row.value)}>Delete</Button>\r\n        },\r\n        {\r\n            show: false,\r\n            Cell: row => <CustTrainings saveTrain={saveTrain}/>\r\n        },\r\n        {\r\n            show: false,\r\n            Cell: row => <Charts trainings={trainings}/>\r\n        }\r\n    ]\r\n\r\n const saveTrain = (training) => {\r\n        fetch('https://customerrest.herokuapp.com/api/trainings', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(training)\r\n        })\r\n        .then(res => fetchData())\r\n        .catch(err => console.error(err))\r\n    }\r\n\r\n    const updateTrain = (training, link) => { \r\n        fetch(link, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(training)\r\n    })\r\n    .then(res => fetchData())\r\n    .catch(err => console.error(err))\r\n    }\r\n    return (\r\n        <div>\r\n          <AddTrain saveTrain={saveTrain}/> \r\n          <p><b>Note!</b> To modify the time, you can write it on the textfield if the suggestions are unfit</p>\r\n          <ReactTable filterable defaultFilterMethod={filterCaseInsensitive} sortable={true} columns={columns} data={trainings}></ ReactTable>\r\n          <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"success\">\r\n            The workout was deleted succesfully!\r\n            </Alert>\r\n            </Snackbar>\r\n    </div>\r\n        \r\n    );\r\n}\r\n\r\n//This function is for making filtering case INsensitive, as it is automatically case sensitive\r\nfunction filterCaseInsensitive(filter, row) {\r\n    const id = filter.pivotId || filter.id;\r\n    console.log(row.date)\r\n    return (row[id] !== undefined ?         \r\n    String(row[id].toLowerCase()).startsWith(filter.value.toLowerCase())\r\n    :           true    );\r\n    \r\n    }\r\n//This function is for filtering an int value, as converting int to String didn't work for the \r\n//filterCaseInsensitive function\r\nfunction filterNumber(filter, row) {\r\n    const id = filter.pivotId || filter.id;\r\n    console.log(row.date)\r\n    return (row[id] !== undefined ?         \r\n    String(row[id]).startsWith(filter.value)\r\n    :           true    );\r\n}\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Mariam\\ptrainer\\src\\components\\Home.js",[],"C:\\Users\\Mariam\\ptrainer\\src\\components\\AddCust.js",[],"C:\\Users\\Mariam\\ptrainer\\src\\components\\AddTrain.js",[],"C:\\Users\\Mariam\\ptrainer\\src\\components\\EditCust.js",[],"C:\\Users\\Mariam\\ptrainer\\src\\components\\EditTrain.js",[],"C:\\Users\\Mariam\\ptrainer\\src\\components\\CustTrainings.js",["69","70","71"],"import React, {useState} from 'react';\r\nimport ReactTable from 'react-table';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport AddTrain from './AddTrain';\r\nimport moment from 'moment';\r\nexport default function CustTrainings(props){\r\n    const [open, setOpen] = React.useState(false);\r\n    const [workout, setWorkout] = useState([]);\r\n    \r\n    const fetchData = (props) => {\r\n        console.log(props.ctraining)\r\n        console.log(props.cust)\r\n        fetch(props) //tämä on se oikea treenilinkki\r\n        .then(response => response.json())\r\n        .then(data => setWorkout(data.content))\r\n    }\r\n    const handleClickOpen = () => {\r\n        fetchData(props.ctraining);\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const saveTrain = (workout) => {\r\n        fetch('https://customerrest.herokuapp.com/api/trainings', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(workout)\r\n        })\r\n        .then(res => fetchData())\r\n        .catch(err => console.error(err))\r\n    }\r\n  \r\n        return (\r\n            <div>\r\n                <Button color=\"primary\" onClick={handleClickOpen}>\r\n            Workouts\r\n          </Button>\r\n          <Dialog open={open} onClose={handleClose} >\r\n              <DialogContent>\r\n            <div>\r\n              <h2>Workouts</h2>\r\n              \r\n              <table>\r\n                  <tbody>\r\n                      <tr><th>Activity</th><th>Duration</th><th>Date</th></tr>\r\n                      {\r\n                      workout.map((workout) =>\r\n                      {\r\n                          if(workout.links != null){\r\n                              return (<tr key={workout.links[0].href}>\r\n                                <td>{workout.activity}</td>\r\n                                <td>{workout.duration}</td>\r\n                                <td>{moment(workout.date).format('LLL')}</td>\r\n                                </tr>)\r\n                          }else{\r\n                              return(<p>No workouts to show</p>)\r\n                          }\r\n                      }\r\n                      )}\r\n\r\n              </tbody>\r\n              </table>\r\n              </div>\r\n              </DialogContent>\r\n              <DialogActions>\r\n              <Button onClick={handleClose} color=\"primary\">\r\n                 Cancel\r\n                 </Button>\r\n              <AddTrain saveTrain={saveTrain} customer={props.cust} /> \r\n              </DialogActions>\r\n              </Dialog>\r\n            \r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n","C:\\Users\\Mariam\\ptrainer\\src\\components\\Calendar.js",[],"C:\\Users\\Mariam\\ptrainer\\src\\components\\Charts.js",["72","73","74"],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":10,"column":8,"nodeType":"81","messageId":"82","endLine":10,"endColumn":21},{"ruleId":"79","severity":1,"message":"83","line":12,"column":8,"nodeType":"81","messageId":"82","endLine":12,"endColumn":15},{"ruleId":"79","severity":1,"message":"84","line":14,"column":8,"nodeType":"81","messageId":"82","endLine":14,"endColumn":18},{"ruleId":"79","severity":1,"message":"85","line":15,"column":8,"nodeType":"81","messageId":"82","endLine":15,"endColumn":16},{"ruleId":"79","severity":1,"message":"86","line":16,"column":9,"nodeType":"81","messageId":"82","endLine":16,"endColumn":18},{"ruleId":"79","severity":1,"message":"87","line":3,"column":8,"nodeType":"81","messageId":"82","endLine":3,"endColumn":23},{"ruleId":"79","severity":1,"message":"86","line":19,"column":9,"nodeType":"81","messageId":"82","endLine":19,"endColumn":18},{"ruleId":"79","severity":1,"message":"88","line":32,"column":11,"nodeType":"81","messageId":"82","endLine":32,"endColumn":15},{"ruleId":"79","severity":1,"message":"89","line":2,"column":8,"nodeType":"81","messageId":"82","endLine":2,"endColumn":18},{"ruleId":"79","severity":1,"message":"90","line":4,"column":8,"nodeType":"81","messageId":"82","endLine":4,"endColumn":17},{"ruleId":"79","severity":1,"message":"91","line":8,"column":8,"nodeType":"81","messageId":"82","endLine":8,"endColumn":19},{"ruleId":"79","severity":1,"message":"92","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":30},{"ruleId":"79","severity":1,"message":"93","line":3,"column":18,"nodeType":"81","messageId":"82","endLine":3,"endColumn":22},{"ruleId":"79","severity":1,"message":"94","line":8,"column":11,"nodeType":"81","messageId":"82","endLine":8,"endColumn":22},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'CustTrainings' is defined but never used.","Identifier","unusedVar","'Toolbar' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'useStyles' is assigned a value but never used.","'useGlobalFilter' is defined but never used.","'date' is assigned a value but never used.","'ReactTable' is defined but never used.","'TextField' is defined but never used.","'DialogTitle' is defined but never used.","'PureComponent' is defined but never used.","'Cell' is defined but never used.","'jsfiddleUrl' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]